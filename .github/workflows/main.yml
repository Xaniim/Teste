name: Godot 4.5 beta 5 Full Cross-Platform Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x86_64, arm64, arm32]
    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.os }}-${{ matrix.arch }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # --- Setup Godot ---
      - name: Setup Godot Linux/macOS
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir -p godot
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            wget https://downloads.tuxfamily.org/godotengine/4.5/Godot_v4.5-beta5-stable_linux_headless.64.zip
            unzip Godot_v4.5-beta5-stable_linux_headless.64.zip -d godot
            chmod +x godot/Godot_v4.5-beta5-stable_linux_headless.64
          else
            wget https://downloads.tuxfamily.org/godotengine/4.5/Godot_v4.5-beta5-stable_macos_universal.zip
            unzip Godot_v4.5-beta5-stable_macos_universal.zip -d godot
          fi

      - name: Setup Godot Windows
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          mkdir godot
          Invoke-WebRequest -Uri https://downloads.tuxfamily.org/godotengine/4.5/Godot_v4.5-beta5-stable_win64.zip -OutFile godot.zip
          Expand-Archive godot.zip -DestinationPath godot

      # --- Install Export Templates ---
      - name: Install Export Templates
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir -p ~/.local/share/godot/templates/4.5.beta5
          wget https://downloads.tuxfamily.org/godotengine/4.5/Godot_v4.5-beta5-stable_export_templates.tpz
          unzip Godot_v4.5-beta5-stable_export_templates.tpz -d ~/.local/share/godot/templates/4.5.beta5

      # --- Android Setup (Linux only) ---
      - name: Android Setup
        if: runner.os == 'Linux'
        shell: bash
        run: |
          sudo apt update
          sudo apt install -y wget unzip openjdk-11-jdk
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip commandlinetools-linux-9477386_latest.zip -d $HOME/android-sdk/cmdline-tools/latest
          echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "export PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$HOME/android-sdk/build-tools/33.0.2:$PATH" >> $GITHUB_ENV
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platforms;android-33" "build-tools;33.0.2" "ndk;25.2.9519653"

      # --- Generate Android Keystore ---
      - name: Generate Android Keystore
        if: runner.os == 'Linux'
        shell: bash
        run: |
          keytool -genkeypair -v \
            -keystore debug.keystore \
            -storepass android \
            -alias androiddebugkey \
            -keypass android \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000

      # --- Android Export ---
      - name: Export Android APK Debug
        if: runner.os == 'Linux'
        shell: bash
        run: ./godot/Godot_v4.5-beta5-stable_linux_headless.64 --export-debug "Android" build/app-debug.apk --verbose

      - name: Export Android APK Release
        if: runner.os == 'Linux'
        shell: bash
        env:
          KEYSTORE_PASSWORD: android
          KEY_ALIAS: androiddebugkey
          KEY_PASSWORD: android
        run: ./godot/Godot_v4.5-beta5-stable_linux_headless.64 --export "Android" build/app-release.apk --verbose

      - name: Export Android AAB
        if: runner.os == 'Linux'
        shell: bash
        env:
          KEYSTORE_PASSWORD: android
          KEY_ALIAS: androiddebugkey
          KEY_PASSWORD: android
        run: ./godot/Godot_v4.5-beta5-stable_linux_headless.64 --export "Android App Bundle" build/app-release.aab --verbose

      # --- Desktop Builds ---
      - name: Export Desktop Builds
        shell: bash
        if: runner.os != 'Windows'
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            ./godot/Godot_v4.5-beta5-stable_linux_headless.64 --export "Linux/X11" build/linux-${{ matrix.arch }}/game.x86_64 --verbose
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            ./godot/Godot_v4.5-beta5-stable_macos_universal.app/Contents/MacOS/Godot --export "Mac OSX" build/macos-${{ matrix.arch }}/game.app --verbose

      - name: Export Windows Desktop
        if: runner.os == 'Windows'
        shell: powershell
        run: godot\Godot_v4.5-beta5-stable_win64.exe --export "Windows Desktop" build/windows-${{ matrix.arch }}/game.exe --verbose

      # --- Upload Artifacts ---
      - name: Upload All Builds
        uses: actions/upload-artifact@v4
        with:
          name: godot-build-${{ matrix.os }}-${{ matrix.arch }}
          path: build/
